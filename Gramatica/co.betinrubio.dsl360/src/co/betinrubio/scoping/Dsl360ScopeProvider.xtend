/*
 * generated by Xtext 2.12.0
 */
package co.betinrubio.scoping

import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import metamodel360.Panorama;
import metamodel360.Hotspot;
import org.eclipse.xtext.scoping.Scopes;
import metamodel360.Tour;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class Dsl360ScopeProvider extends AbstractDeclarativeScopeProvider {
/*
	 * Metodo que sobreescribe el metodo getScope de AbstractDeclarativeScopeProvider 
	 * con el fin de aplicar nuestro propio scoping. En el cuerpo de este metodo debemos usar
	 * los parametros: context (el objeto sobre el que se aplicara el Scope) y reference (el atributo del objeto en cuestion).
	 * Por lo tanto se debe hacer referencia a los panoramas del tour en el cual se encuentra incluido el hotspot
	 */
	
	override public IScope getScope(EObject context, EReference reference)
	{
		if(context instanceof Hotspot && reference.name == "destino"){
			return Scopes::scopeFor((context.eContainer.eContainer as Tour).panoramas);
		}	
		return super.getScope(context, reference); 
	}
}
