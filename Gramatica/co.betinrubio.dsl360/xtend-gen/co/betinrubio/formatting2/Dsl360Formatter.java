/**
 * generated by Xtext 2.12.0
 */
package co.betinrubio.formatting2;

import co.betinrubio.services.Dsl360GrammarAccess;
import com.google.inject.Inject;
import java.util.Arrays;
import metamodel360.Panorama;
import metamodel360.Proyecto;
import metamodel360.Tour;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class Dsl360Formatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private Dsl360GrammarAccess _dsl360GrammarAccess;
  
  protected void _format(final Proyecto proyecto, @Extension final IFormattableDocument document) {
    EList<Tour> _toures = proyecto.getToures();
    for (final Tour tour : _toures) {
      document.<Tour>format(tour);
    }
  }
  
  protected void _format(final Tour tour, @Extension final IFormattableDocument document) {
    EList<Panorama> _panoramas = tour.getPanoramas();
    for (final Panorama panorama : _panoramas) {
      document.<Panorama>format(panorama);
    }
  }
  
  public void format(final Object proyecto, final IFormattableDocument document) {
    if (proyecto instanceof XtextResource) {
      _format((XtextResource)proyecto, document);
      return;
    } else if (proyecto instanceof Proyecto) {
      _format((Proyecto)proyecto, document);
      return;
    } else if (proyecto instanceof Tour) {
      _format((Tour)proyecto, document);
      return;
    } else if (proyecto instanceof EObject) {
      _format((EObject)proyecto, document);
      return;
    } else if (proyecto == null) {
      _format((Void)null, document);
      return;
    } else if (proyecto != null) {
      _format(proyecto, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(proyecto, document).toString());
    }
  }
}
