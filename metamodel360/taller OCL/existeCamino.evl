operation Panorama nexTo(pano: Panorama, list: Collection){

	if(self.hotspots.exists(h| h.destino = pano) or pano.hotspots.exists(h| h.destino = self)){
		return true;
	} else{
		if(list.excludes(pano)){
			list.add(pano);		
		}
	
		var salida: Boolean = false;
		for(p in pano.hotspots.collect(h| h.destino)){
			if(list.excludes(p) and self.nexTo(p, list)){
				salida = true;
				break;
			}
		}
		return salida;
	}
}

context metamodel360!Panorama{
	critique graph{
		guard: true
		check: Panorama.allInstances.select(p | p <> self).forAll(p | self.nexTo(p, new Set()))
		message: "El panorama " + self.name + " se encuentra aislado de los demas panoramas"
	}
}
