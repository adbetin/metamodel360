/*
 * generated by Xtext 2.12.0
 */
package co.betinrubio.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class Dsl360GrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProyectoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.Proyecto");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProyectoAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cOPENBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cTouresKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final RuleCall cOPENBRAKETTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Assignment cTouresAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTouresTourParserRuleCall_9_0 = (RuleCall)cTouresAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final RuleCall cCOMMATerminalRuleCall_10_0 = (RuleCall)cGroup_10.eContents().get(0);
		private final Assignment cTouresAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cTouresTourParserRuleCall_10_1_0 = (RuleCall)cTouresAssignment_10_1.eContents().get(0);
		private final RuleCall cCLOSEBRAKETTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cCLOSEBRACETerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//Proyecto:
		//	{Proyecto} OPENBRACE
		//	'name' COLON name=EString COMMA
		//	'toures' COLON OPENBRAKET
		//	toures+=Tour (COMMA toures+=Tour)*
		//	CLOSEBRAKET
		//	CLOSEBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Proyecto} OPENBRACE 'name' COLON name=EString COMMA 'toures' COLON OPENBRAKET toures+=Tour (COMMA toures+=Tour)*
		//CLOSEBRAKET CLOSEBRACE
		public Group getGroup() { return cGroup; }
		
		//{Proyecto}
		public Action getProyectoAction_0() { return cProyectoAction_0; }
		
		//OPENBRACE
		public RuleCall getOPENBRACETerminalRuleCall_1() { return cOPENBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'toures'
		public Keyword getTouresKeyword_6() { return cTouresKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//OPENBRAKET
		public RuleCall getOPENBRAKETTerminalRuleCall_8() { return cOPENBRAKETTerminalRuleCall_8; }
		
		//toures+=Tour
		public Assignment getTouresAssignment_9() { return cTouresAssignment_9; }
		
		//Tour
		public RuleCall getTouresTourParserRuleCall_9_0() { return cTouresTourParserRuleCall_9_0; }
		
		//(COMMA toures+=Tour)*
		public Group getGroup_10() { return cGroup_10; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_10_0() { return cCOMMATerminalRuleCall_10_0; }
		
		//toures+=Tour
		public Assignment getTouresAssignment_10_1() { return cTouresAssignment_10_1; }
		
		//Tour
		public RuleCall getTouresTourParserRuleCall_10_1_0() { return cTouresTourParserRuleCall_10_1_0; }
		
		//CLOSEBRAKET
		public RuleCall getCLOSEBRAKETTerminalRuleCall_11() { return cCLOSEBRAKETTerminalRuleCall_11; }
		
		//CLOSEBRACE
		public RuleCall getCLOSEBRACETerminalRuleCall_12() { return cCLOSEBRACETerminalRuleCall_12; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class TourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.Tour");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTourAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cOPENBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cPanoramasKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final RuleCall cOPENBRAKETTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Assignment cPanoramasAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cPanoramasPanoramaParserRuleCall_9_0 = (RuleCall)cPanoramasAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final RuleCall cCOMMATerminalRuleCall_10_0 = (RuleCall)cGroup_10.eContents().get(0);
		private final Assignment cPanoramasAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cPanoramasPanoramaParserRuleCall_10_1_0 = (RuleCall)cPanoramasAssignment_10_1.eContents().get(0);
		private final RuleCall cCLOSEBRAKETTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final RuleCall cCLOSEBRACETerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//Tour:
		//	{Tour} OPENBRACE
		//	'name' COLON name=EString COMMA
		//	'panoramas' COLON OPENBRAKET
		//	panoramas+=Panorama (COMMA panoramas+=Panorama)*
		//	CLOSEBRAKET
		//	CLOSEBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Tour} OPENBRACE 'name' COLON name=EString COMMA 'panoramas' COLON OPENBRAKET panoramas+=Panorama (COMMA
		//panoramas+=Panorama)* CLOSEBRAKET CLOSEBRACE
		public Group getGroup() { return cGroup; }
		
		//{Tour}
		public Action getTourAction_0() { return cTourAction_0; }
		
		//OPENBRACE
		public RuleCall getOPENBRACETerminalRuleCall_1() { return cOPENBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'panoramas'
		public Keyword getPanoramasKeyword_6() { return cPanoramasKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//OPENBRAKET
		public RuleCall getOPENBRAKETTerminalRuleCall_8() { return cOPENBRAKETTerminalRuleCall_8; }
		
		//panoramas+=Panorama
		public Assignment getPanoramasAssignment_9() { return cPanoramasAssignment_9; }
		
		//Panorama
		public RuleCall getPanoramasPanoramaParserRuleCall_9_0() { return cPanoramasPanoramaParserRuleCall_9_0; }
		
		//(COMMA panoramas+=Panorama)*
		public Group getGroup_10() { return cGroup_10; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_10_0() { return cCOMMATerminalRuleCall_10_0; }
		
		//panoramas+=Panorama
		public Assignment getPanoramasAssignment_10_1() { return cPanoramasAssignment_10_1; }
		
		//Panorama
		public RuleCall getPanoramasPanoramaParserRuleCall_10_1_0() { return cPanoramasPanoramaParserRuleCall_10_1_0; }
		
		//CLOSEBRAKET
		public RuleCall getCLOSEBRAKETTerminalRuleCall_11() { return cCLOSEBRAKETTerminalRuleCall_11; }
		
		//CLOSEBRACE
		public RuleCall getCLOSEBRACETerminalRuleCall_12() { return cCLOSEBRACETerminalRuleCall_12; }
	}
	public class PanoramaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.Panorama");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPanoramaAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cOPENBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cImageKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cImagenAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cImagenEStringParserRuleCall_6_2_0 = (RuleCall)cImagenAssignment_6_2.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
		private final Keyword cHotspotsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final RuleCall cCOLONTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final RuleCall cOPENBRAKETTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Assignment cHotspotsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cHotspotsHotspotParserRuleCall_10_0 = (RuleCall)cHotspotsAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final RuleCall cCOMMATerminalRuleCall_11_0 = (RuleCall)cGroup_11.eContents().get(0);
		private final Assignment cHotspotsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cHotspotsHotspotParserRuleCall_11_1_0 = (RuleCall)cHotspotsAssignment_11_1.eContents().get(0);
		private final RuleCall cCLOSEBRAKETTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		private final RuleCall cCLOSEBRACETerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		
		//Panorama:
		//	{Panorama} OPENBRACE
		//	'name' COLON name=EString COMMA ('image' COLON imagen=EString COMMA)?
		//	'hotspots' COLON OPENBRAKET
		//	hotspots+=Hotspot (COMMA hotspots+=Hotspot)*
		//	CLOSEBRAKET
		//	CLOSEBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Panorama} OPENBRACE 'name' COLON name=EString COMMA ('image' COLON imagen=EString COMMA)? 'hotspots' COLON OPENBRAKET
		//hotspots+=Hotspot (COMMA hotspots+=Hotspot)* CLOSEBRAKET CLOSEBRACE
		public Group getGroup() { return cGroup; }
		
		//{Panorama}
		public Action getPanoramaAction_0() { return cPanoramaAction_0; }
		
		//OPENBRACE
		public RuleCall getOPENBRACETerminalRuleCall_1() { return cOPENBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//('image' COLON imagen=EString COMMA)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'image'
		public Keyword getImageKeyword_6_0() { return cImageKeyword_6_0; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_6_1() { return cCOLONTerminalRuleCall_6_1; }
		
		//imagen=EString
		public Assignment getImagenAssignment_6_2() { return cImagenAssignment_6_2; }
		
		//EString
		public RuleCall getImagenEStringParserRuleCall_6_2_0() { return cImagenEStringParserRuleCall_6_2_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_6_3() { return cCOMMATerminalRuleCall_6_3; }
		
		//'hotspots'
		public Keyword getHotspotsKeyword_7() { return cHotspotsKeyword_7; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_8() { return cCOLONTerminalRuleCall_8; }
		
		//OPENBRAKET
		public RuleCall getOPENBRAKETTerminalRuleCall_9() { return cOPENBRAKETTerminalRuleCall_9; }
		
		//hotspots+=Hotspot
		public Assignment getHotspotsAssignment_10() { return cHotspotsAssignment_10; }
		
		//Hotspot
		public RuleCall getHotspotsHotspotParserRuleCall_10_0() { return cHotspotsHotspotParserRuleCall_10_0; }
		
		//(COMMA hotspots+=Hotspot)*
		public Group getGroup_11() { return cGroup_11; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_11_0() { return cCOMMATerminalRuleCall_11_0; }
		
		//hotspots+=Hotspot
		public Assignment getHotspotsAssignment_11_1() { return cHotspotsAssignment_11_1; }
		
		//Hotspot
		public RuleCall getHotspotsHotspotParserRuleCall_11_1_0() { return cHotspotsHotspotParserRuleCall_11_1_0; }
		
		//CLOSEBRAKET
		public RuleCall getCLOSEBRAKETTerminalRuleCall_12() { return cCLOSEBRAKETTerminalRuleCall_12; }
		
		//CLOSEBRACE
		public RuleCall getCLOSEBRACETerminalRuleCall_13() { return cCLOSEBRACETerminalRuleCall_13; }
	}
	public class HotspotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.Hotspot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHotspotAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cOPENBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cDestinoAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cDestinoPanoramaCrossReference_8_0 = (CrossReference)cDestinoAssignment_8.eContents().get(0);
		private final RuleCall cDestinoPanoramaEStringParserRuleCall_8_0_1 = (RuleCall)cDestinoPanoramaCrossReference_8_0.eContents().get(1);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cPositionKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cPosicionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPosicionPosicionParserRuleCall_12_0 = (RuleCall)cPosicionAssignment_12.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		private final Keyword cRotationKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final RuleCall cCOLONTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);
		private final Assignment cRotacionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cRotacionRotacionParserRuleCall_16_0 = (RuleCall)cRotacionAssignment_16.eContents().get(0);
		private final RuleCall cCLOSEBRACETerminalRuleCall_17 = (RuleCall)cGroup.eContents().get(17);
		
		//Hotspot:
		//	{Hotspot} OPENBRACE
		//	'name' COLON name=EString COMMA
		//	'to' COLON destino=[Panorama|EString] COMMA
		//	'position' COLON posicion=Posicion COMMA
		//	'rotation' COLON rotacion=Rotacion
		//	CLOSEBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Hotspot} OPENBRACE 'name' COLON name=EString COMMA 'to' COLON destino=[Panorama|EString] COMMA 'position' COLON
		//posicion=Posicion COMMA 'rotation' COLON rotacion=Rotacion CLOSEBRACE
		public Group getGroup() { return cGroup; }
		
		//{Hotspot}
		public Action getHotspotAction_0() { return cHotspotAction_0; }
		
		//OPENBRACE
		public RuleCall getOPENBRACETerminalRuleCall_1() { return cOPENBRACETerminalRuleCall_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'to'
		public Keyword getToKeyword_6() { return cToKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//destino=[Panorama|EString]
		public Assignment getDestinoAssignment_8() { return cDestinoAssignment_8; }
		
		//[Panorama|EString]
		public CrossReference getDestinoPanoramaCrossReference_8_0() { return cDestinoPanoramaCrossReference_8_0; }
		
		//EString
		public RuleCall getDestinoPanoramaEStringParserRuleCall_8_0_1() { return cDestinoPanoramaEStringParserRuleCall_8_0_1; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'position'
		public Keyword getPositionKeyword_10() { return cPositionKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//posicion=Posicion
		public Assignment getPosicionAssignment_12() { return cPosicionAssignment_12; }
		
		//Posicion
		public RuleCall getPosicionPosicionParserRuleCall_12_0() { return cPosicionPosicionParserRuleCall_12_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_13() { return cCOMMATerminalRuleCall_13; }
		
		//'rotation'
		public Keyword getRotationKeyword_14() { return cRotationKeyword_14; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_15() { return cCOLONTerminalRuleCall_15; }
		
		//rotacion=Rotacion
		public Assignment getRotacionAssignment_16() { return cRotacionAssignment_16; }
		
		//Rotacion
		public RuleCall getRotacionRotacionParserRuleCall_16_0() { return cRotacionRotacionParserRuleCall_16_0; }
		
		//CLOSEBRACE
		public RuleCall getCLOSEBRACETerminalRuleCall_17() { return cCLOSEBRACETerminalRuleCall_17; }
	}
	public class PosicionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.Posicion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPosicionAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cOPENBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cPosxKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXEDoubleParserRuleCall_4_0 = (RuleCall)cXAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cPosyKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cYAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cYEDoubleParserRuleCall_8_0 = (RuleCall)cYAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cPoszKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cZAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cZEDoubleParserRuleCall_12_0 = (RuleCall)cZAssignment_12.eContents().get(0);
		private final RuleCall cCLOSEBRACETerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		
		//Posicion:
		//	{Posicion} OPENBRACE
		//	'posx' COLON x=EDouble COMMA
		//	'posy' COLON y=EDouble COMMA
		//	'posz' COLON z=EDouble
		//	CLOSEBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Posicion} OPENBRACE 'posx' COLON x=EDouble COMMA 'posy' COLON y=EDouble COMMA 'posz' COLON z=EDouble CLOSEBRACE
		public Group getGroup() { return cGroup; }
		
		//{Posicion}
		public Action getPosicionAction_0() { return cPosicionAction_0; }
		
		//OPENBRACE
		public RuleCall getOPENBRACETerminalRuleCall_1() { return cOPENBRACETerminalRuleCall_1; }
		
		//'posx'
		public Keyword getPosxKeyword_2() { return cPosxKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//x=EDouble
		public Assignment getXAssignment_4() { return cXAssignment_4; }
		
		//EDouble
		public RuleCall getXEDoubleParserRuleCall_4_0() { return cXEDoubleParserRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'posy'
		public Keyword getPosyKeyword_6() { return cPosyKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//y=EDouble
		public Assignment getYAssignment_8() { return cYAssignment_8; }
		
		//EDouble
		public RuleCall getYEDoubleParserRuleCall_8_0() { return cYEDoubleParserRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'posz'
		public Keyword getPoszKeyword_10() { return cPoszKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//z=EDouble
		public Assignment getZAssignment_12() { return cZAssignment_12; }
		
		//EDouble
		public RuleCall getZEDoubleParserRuleCall_12_0() { return cZEDoubleParserRuleCall_12_0; }
		
		//CLOSEBRACE
		public RuleCall getCLOSEBRACETerminalRuleCall_13() { return cCLOSEBRACETerminalRuleCall_13; }
	}
	public class RotacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.Rotacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRotacionAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cOPENBRACETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRotxKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cCOLONTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cXAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXEDoubleParserRuleCall_4_0 = (RuleCall)cXAssignment_4.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRotyKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cCOLONTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Assignment cYAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cYEDoubleParserRuleCall_8_0 = (RuleCall)cYAssignment_8.eContents().get(0);
		private final RuleCall cCOMMATerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Keyword cRotzKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cCOLONTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Assignment cZAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cZEDoubleParserRuleCall_12_0 = (RuleCall)cZAssignment_12.eContents().get(0);
		private final RuleCall cCLOSEBRACETerminalRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		
		//Rotacion:
		//	{Rotacion} OPENBRACE
		//	'rotx' COLON x=EDouble COMMA
		//	'roty' COLON y=EDouble COMMA
		//	'rotz' COLON z=EDouble
		//	CLOSEBRACE;
		@Override public ParserRule getRule() { return rule; }
		
		//{Rotacion} OPENBRACE 'rotx' COLON x=EDouble COMMA 'roty' COLON y=EDouble COMMA 'rotz' COLON z=EDouble CLOSEBRACE
		public Group getGroup() { return cGroup; }
		
		//{Rotacion}
		public Action getRotacionAction_0() { return cRotacionAction_0; }
		
		//OPENBRACE
		public RuleCall getOPENBRACETerminalRuleCall_1() { return cOPENBRACETerminalRuleCall_1; }
		
		//'rotx'
		public Keyword getRotxKeyword_2() { return cRotxKeyword_2; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_3() { return cCOLONTerminalRuleCall_3; }
		
		//x=EDouble
		public Assignment getXAssignment_4() { return cXAssignment_4; }
		
		//EDouble
		public RuleCall getXEDoubleParserRuleCall_4_0() { return cXEDoubleParserRuleCall_4_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_5() { return cCOMMATerminalRuleCall_5; }
		
		//'roty'
		public Keyword getRotyKeyword_6() { return cRotyKeyword_6; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_7() { return cCOLONTerminalRuleCall_7; }
		
		//y=EDouble
		public Assignment getYAssignment_8() { return cYAssignment_8; }
		
		//EDouble
		public RuleCall getYEDoubleParserRuleCall_8_0() { return cYEDoubleParserRuleCall_8_0; }
		
		//COMMA
		public RuleCall getCOMMATerminalRuleCall_9() { return cCOMMATerminalRuleCall_9; }
		
		//'rotz'
		public Keyword getRotzKeyword_10() { return cRotzKeyword_10; }
		
		//COLON
		public RuleCall getCOLONTerminalRuleCall_11() { return cCOLONTerminalRuleCall_11; }
		
		//z=EDouble
		public Assignment getZAssignment_12() { return cZAssignment_12; }
		
		//EDouble
		public RuleCall getZEDoubleParserRuleCall_12_0() { return cZEDoubleParserRuleCall_12_0; }
		
		//CLOSEBRACE
		public RuleCall getCLOSEBRACETerminalRuleCall_13() { return cCLOSEBRACETerminalRuleCall_13; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	
	
	private final ProyectoElements pProyecto;
	private final EStringElements pEString;
	private final TourElements pTour;
	private final PanoramaElements pPanorama;
	private final HotspotElements pHotspot;
	private final PosicionElements pPosicion;
	private final RotacionElements pRotacion;
	private final EDoubleElements pEDouble;
	private final TerminalRule tOPENBRACE;
	private final TerminalRule tCLOSEBRACE;
	private final TerminalRule tOPENBRAKET;
	private final TerminalRule tCLOSEBRAKET;
	private final TerminalRule tCOLON;
	private final TerminalRule tQUOTATIONMARK;
	private final TerminalRule tCOMMA;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public Dsl360GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProyecto = new ProyectoElements();
		this.pEString = new EStringElements();
		this.pTour = new TourElements();
		this.pPanorama = new PanoramaElements();
		this.pHotspot = new HotspotElements();
		this.pPosicion = new PosicionElements();
		this.pRotacion = new RotacionElements();
		this.pEDouble = new EDoubleElements();
		this.tOPENBRACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.OPENBRACE");
		this.tCLOSEBRACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.CLOSEBRACE");
		this.tOPENBRAKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.OPENBRAKET");
		this.tCLOSEBRAKET = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.CLOSEBRAKET");
		this.tCOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.COLON");
		this.tQUOTATIONMARK = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.QUOTATIONMARK");
		this.tCOMMA = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "co.betinrubio.Dsl360.COMMA");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.betinrubio.Dsl360".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Proyecto:
	//	{Proyecto} OPENBRACE
	//	'name' COLON name=EString COMMA
	//	'toures' COLON OPENBRAKET
	//	toures+=Tour (COMMA toures+=Tour)*
	//	CLOSEBRAKET
	//	CLOSEBRACE;
	public ProyectoElements getProyectoAccess() {
		return pProyecto;
	}
	
	public ParserRule getProyectoRule() {
		return getProyectoAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Tour:
	//	{Tour} OPENBRACE
	//	'name' COLON name=EString COMMA
	//	'panoramas' COLON OPENBRAKET
	//	panoramas+=Panorama (COMMA panoramas+=Panorama)*
	//	CLOSEBRAKET
	//	CLOSEBRACE;
	public TourElements getTourAccess() {
		return pTour;
	}
	
	public ParserRule getTourRule() {
		return getTourAccess().getRule();
	}
	
	//Panorama:
	//	{Panorama} OPENBRACE
	//	'name' COLON name=EString COMMA ('image' COLON imagen=EString COMMA)?
	//	'hotspots' COLON OPENBRAKET
	//	hotspots+=Hotspot (COMMA hotspots+=Hotspot)*
	//	CLOSEBRAKET
	//	CLOSEBRACE;
	public PanoramaElements getPanoramaAccess() {
		return pPanorama;
	}
	
	public ParserRule getPanoramaRule() {
		return getPanoramaAccess().getRule();
	}
	
	//Hotspot:
	//	{Hotspot} OPENBRACE
	//	'name' COLON name=EString COMMA
	//	'to' COLON destino=[Panorama|EString] COMMA
	//	'position' COLON posicion=Posicion COMMA
	//	'rotation' COLON rotacion=Rotacion
	//	CLOSEBRACE;
	public HotspotElements getHotspotAccess() {
		return pHotspot;
	}
	
	public ParserRule getHotspotRule() {
		return getHotspotAccess().getRule();
	}
	
	//Posicion:
	//	{Posicion} OPENBRACE
	//	'posx' COLON x=EDouble COMMA
	//	'posy' COLON y=EDouble COMMA
	//	'posz' COLON z=EDouble
	//	CLOSEBRACE;
	public PosicionElements getPosicionAccess() {
		return pPosicion;
	}
	
	public ParserRule getPosicionRule() {
		return getPosicionAccess().getRule();
	}
	
	//Rotacion:
	//	{Rotacion} OPENBRACE
	//	'rotx' COLON x=EDouble COMMA
	//	'roty' COLON y=EDouble COMMA
	//	'rotz' COLON z=EDouble
	//	CLOSEBRACE;
	public RotacionElements getRotacionAccess() {
		return pRotacion;
	}
	
	public ParserRule getRotacionRule() {
		return getRotacionAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//terminal OPENBRACE:
	//	"{";
	public TerminalRule getOPENBRACERule() {
		return tOPENBRACE;
	}
	
	//terminal CLOSEBRACE:
	//	"}";
	public TerminalRule getCLOSEBRACERule() {
		return tCLOSEBRACE;
	}
	
	//terminal OPENBRAKET:
	//	"[";
	public TerminalRule getOPENBRAKETRule() {
		return tOPENBRAKET;
	}
	
	//terminal CLOSEBRAKET:
	//	"]";
	public TerminalRule getCLOSEBRAKETRule() {
		return tCLOSEBRAKET;
	}
	
	//terminal COLON:
	//	":";
	public TerminalRule getCOLONRule() {
		return tCOLON;
	}
	
	//terminal QUOTATIONMARK:
	//	"'";
	public TerminalRule getQUOTATIONMARKRule() {
		return tQUOTATIONMARK;
	}
	
	//terminal COMMA:
	//	",";
	public TerminalRule getCOMMARule() {
		return tCOMMA;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
